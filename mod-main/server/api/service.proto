syntax = "proto3";

import "google/protobuf/timestamp.proto";

package proto;


message ListSupportRoleRequest {
    // optionally adds org_id to get all support roles
    // in that org.
    string org_id = 1;
}

message GetSupportRoleRequest {
    string id = 1;
}

message Orgs {
    repeated Org orgs = 1;
}

message ListOrgRequest {
}

message GetOrgRequest {
    string id = 1;
}

message NewAnswerRequest {
    string id = 1;
    string sel_support_role_id = 2;
    string sel_campaign_id = 3;
    string min_hours_pledged = 4;
}

message Answer {
    string id = 1;
    // selected support role
    string sel_support_role_id = 2;
    // selected campaign id
    string sel_campaign_id = 3;
    string min_hours_pledged = 4;
    google.protobuf.Timestamp created_at = 5;
}

message Answers {
    repeated Answer answers = 1;
}

message SupportRole {
    string id = 1;
    string name = 2;
    string comment = 3;
    bool mandatory = 4;
    string uom = 5;
    string min_hours = 6;
    // org campaign id
    string campaign_id = 7;
    google.protobuf.Timestamp created_at = 8;
}

message Org {
    string id = 1;
    string campaign_name = 2;
    string logo_url = 3;
    string goal = 4;
    repeated string crg_quantity_many = 5;
    repeated string crg_ids_many = 6;
    string already_pledged = 7;
    google.protobuf.Timestamp action_time = 8;
    string action_location = 9;
    string campaign_still = 10;
    string min_pioneers = 11;
    string min_rebels_for_media = 12;
    string min_rebels_to_win = 13;
    string action_length = 14;
    string action_type = 15;
    repeated string backing_org = 16;
    string category = 17;
    string contact = 18;
    string hist_precedents = 19;
    string organization = 20;
    string strategy = 21;
    repeated string video_url = 22;
    string uom = 23;
}

message NewAnswerResponse {
    bool success = 1;
    string id = 2;
}

message DeleteAnswerResponse {
    bool success = 1;
}

message AnswerIdRequest {
    string id = 1;
}

message SupportRoles {
    repeated SupportRole support_roles = 1;
}

message ListAnswersRequest {
    string support_role_id = 1;
    string campaign_id = 2;
}


service Question {
//    rpc GetOrg(GetOrgRequest) returns (Org);
//    rpc ListOrg(ListOrgRequest) returns (Orgs);
//    rpc GetSupportRole(GetSupportRoleRequest) returns (SupportRoles);
//    rpc ListSupportRole(ListSupportRoleRequest) returns (SupportRoles);
    rpc NewAnswer(NewAnswerRequest) returns (NewAnswerResponse);
    rpc GetAnswer(AnswerIdRequest) returns (Answer);
    rpc DeleteAnswer(AnswerIdRequest) returns (DeleteAnswerResponse);
    rpc ListAnswers(ListAnswersRequest) returns (Answers);
}
